// Generated from \\wsl$\Ubuntu\home\stilgar\prj\obsidian-grow\SimpleTextLex.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SimpleTextLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Word=1, Smiley=2, Url=3, QUOT=4, DQUOT=5, LPAREN=6, RPAREN=7, LACCOL=8, 
		RACCOL=9, LBRACK=10, RBRACK=11, BACKTICK=12, DOLLAR=13, LT=14, GT=15, 
		DOT=16, QMARK=17, EMARK=18, ELLIPS=19, COMMA=20, COLON=21, SEMICOLON=22, 
		SMILEY=23, WS=24, END_DOLLAR=25, Math=26, MathEnd=27;
	public static final int
		MATH=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "MATH"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"Word", "Smiley", "Url", "QUOT", "DQUOT", "LPAREN", "RPAREN", "LACCOL", 
			"RACCOL", "LBRACK", "RBRACK", "BACKTICK", "DOLLAR", "LT", "GT", "DOT", 
			"QMARK", "EMARK", "ELLIPS", "COMMA", "COLON", "SEMICOLON", "WORD_START", 
			"WORD_CHAR", "WORD_END", "SMILEY", "ESCAPED_CHAR", "SPACE", "WS", "END_DOLLAR", 
			"Math", "MathEnd"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, "'''", "'\"'", "'('", "')'", "'{'", "'}'", "'['", 
			"']'", "'`'", null, "'<'", "'>'", "'.'", "'?'", "'!'", "'\\u00E2\\u20AC\\u00A6'", 
			"','", "':'", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "Word", "Smiley", "Url", "QUOT", "DQUOT", "LPAREN", "RPAREN", "LACCOL", 
			"RACCOL", "LBRACK", "RBRACK", "BACKTICK", "DOLLAR", "LT", "GT", "DOT", 
			"QMARK", "EMARK", "ELLIPS", "COMMA", "COLON", "SEMICOLON", "SMILEY", 
			"WS", "END_DOLLAR", "Math", "MathEnd"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SimpleTextLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SimpleTextLex.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001b\u00ca\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000"+
		"\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003"+
		"\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006"+
		"\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002"+
		"\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002"+
		"\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002"+
		"\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002"+
		"\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002"+
		"\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002"+
		"\u001a\u0007\u001a\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002"+
		"\u001d\u0007\u001d\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0005\u0000F\b\u0000\n\u0000\f\u0000I\t"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u0000N\b\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0002\u0004\u0002S\b\u0002\u000b\u0002\f\u0002"+
		"T\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0004\u0002"+
		"\\\b\u0002\u000b\u0002\f\u0002]\u0001\u0002\u0001\u0002\u0004\u0002b\b"+
		"\u0002\u000b\u0002\f\u0002c\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0004\u0002k\b\u0002\u000b\u0002\f\u0002l\u0001\u0002"+
		"\u0001\u0002\u0003\u0002q\b\u0002\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016"+
		"\u0001\u0016\u0003\u0016\u009f\b\u0016\u0001\u0017\u0001\u0017\u0003\u0017"+
		"\u00a3\b\u0017\u0001\u0018\u0001\u0018\u0003\u0018\u00a7\b\u0018\u0001"+
		"\u0019\u0001\u0019\u0003\u0019\u00ab\b\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0003\u0019\u00b1\b\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0004\u001c\u00b9\b\u001c\u000b"+
		"\u001c\f\u001c\u00ba\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0003\u001e\u00c5\b\u001e\u0001"+
		"\u001f\u0001\u001f\u0003\u001f\u00c9\b\u001f\u0000\u0000 \u0002\u0001"+
		"\u0004\u0002\u0006\u0003\b\u0004\n\u0005\f\u0006\u000e\u0007\u0010\b\u0012"+
		"\t\u0014\n\u0016\u000b\u0018\f\u001a\r\u001c\u000e\u001e\u000f \u0010"+
		"\"\u0011$\u0012&\u0013(\u0014*\u0015,\u0016.\u00000\u00002\u00004\u0017"+
		"6\u00008\u0000:\u0018<\u0019>\u001a@\u001b\u0002\u0000\u0001\t\u0001\u0000"+
		"az\u0001\u0000  \u000f\u0000\t\n \"$$\'),,..:;??[]``{{}}\u00a6\u00a6\u00e2"+
		"\u00e2\u20ac\u20ac\r\u0000\t\n !(),,..:;??[]{{}}\u00a6\u00a6\u00e2\u00e2"+
		"\u20ac\u20ac\u0001\u0000:;\u0004\u0000()DDpp||\u0003\u0000\t\n\f\r  \u0001"+
		"\u0000\n\n\u0002\u0000\n\n  \u00d3\u0000\u0002\u0001\u0000\u0000\u0000"+
		"\u0000\u0004\u0001\u0000\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000"+
		"\u0000\b\u0001\u0000\u0000\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000"+
		"\f\u0001\u0000\u0000\u0000\u0000\u000e\u0001\u0000\u0000\u0000\u0000\u0010"+
		"\u0001\u0000\u0000\u0000\u0000\u0012\u0001\u0000\u0000\u0000\u0000\u0014"+
		"\u0001\u0000\u0000\u0000\u0000\u0016\u0001\u0000\u0000\u0000\u0000\u0018"+
		"\u0001\u0000\u0000\u0000\u0000\u001a\u0001\u0000\u0000\u0000\u0000\u001c"+
		"\u0001\u0000\u0000\u0000\u0000\u001e\u0001\u0000\u0000\u0000\u0000 \u0001"+
		"\u0000\u0000\u0000\u0000\"\u0001\u0000\u0000\u0000\u0000$\u0001\u0000"+
		"\u0000\u0000\u0000&\u0001\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000"+
		"\u0000*\u0001\u0000\u0000\u0000\u0000,\u0001\u0000\u0000\u0000\u00004"+
		"\u0001\u0000\u0000\u0000\u0000:\u0001\u0000\u0000\u0000\u0001<\u0001\u0000"+
		"\u0000\u0000\u0001>\u0001\u0000\u0000\u0000\u0001@\u0001\u0000\u0000\u0000"+
		"\u0002M\u0001\u0000\u0000\u0000\u0004O\u0001\u0000\u0000\u0000\u0006p"+
		"\u0001\u0000\u0000\u0000\br\u0001\u0000\u0000\u0000\nt\u0001\u0000\u0000"+
		"\u0000\fv\u0001\u0000\u0000\u0000\u000ex\u0001\u0000\u0000\u0000\u0010"+
		"z\u0001\u0000\u0000\u0000\u0012|\u0001\u0000\u0000\u0000\u0014~\u0001"+
		"\u0000\u0000\u0000\u0016\u0080\u0001\u0000\u0000\u0000\u0018\u0082\u0001"+
		"\u0000\u0000\u0000\u001a\u0084\u0001\u0000\u0000\u0000\u001c\u0088\u0001"+
		"\u0000\u0000\u0000\u001e\u008a\u0001\u0000\u0000\u0000 \u008c\u0001\u0000"+
		"\u0000\u0000\"\u008e\u0001\u0000\u0000\u0000$\u0090\u0001\u0000\u0000"+
		"\u0000&\u0092\u0001\u0000\u0000\u0000(\u0096\u0001\u0000\u0000\u0000*"+
		"\u0098\u0001\u0000\u0000\u0000,\u009a\u0001\u0000\u0000\u0000.\u009e\u0001"+
		"\u0000\u0000\u00000\u00a2\u0001\u0000\u0000\u00002\u00a6\u0001\u0000\u0000"+
		"\u00004\u00b0\u0001\u0000\u0000\u00006\u00b2\u0001\u0000\u0000\u00008"+
		"\u00b5\u0001\u0000\u0000\u0000:\u00b8\u0001\u0000\u0000\u0000<\u00be\u0001"+
		"\u0000\u0000\u0000>\u00c4\u0001\u0000\u0000\u0000@\u00c8\u0001\u0000\u0000"+
		"\u0000BN\u0001\u0000\u0000\u0000CG\u0003.\u0016\u0000DF\u00030\u0017\u0000"+
		"ED\u0001\u0000\u0000\u0000FI\u0001\u0000\u0000\u0000GE\u0001\u0000\u0000"+
		"\u0000GH\u0001\u0000\u0000\u0000HJ\u0001\u0000\u0000\u0000IG\u0001\u0000"+
		"\u0000\u0000JK\u00032\u0018\u0000KN\u0001\u0000\u0000\u0000LN\u0003.\u0016"+
		"\u0000MB\u0001\u0000\u0000\u0000MC\u0001\u0000\u0000\u0000ML\u0001\u0000"+
		"\u0000\u0000N\u0003\u0001\u0000\u0000\u0000OP\u00034\u0019\u0000P\u0005"+
		"\u0001\u0000\u0000\u0000QS\u0007\u0000\u0000\u0000RQ\u0001\u0000\u0000"+
		"\u0000ST\u0001\u0000\u0000\u0000TR\u0001\u0000\u0000\u0000TU\u0001\u0000"+
		"\u0000\u0000UV\u0001\u0000\u0000\u0000VW\u0005:\u0000\u0000WX\u0005/\u0000"+
		"\u0000XY\u0005/\u0000\u0000Y[\u0001\u0000\u0000\u0000Z\\\b\u0001\u0000"+
		"\u0000[Z\u0001\u0000\u0000\u0000\\]\u0001\u0000\u0000\u0000][\u0001\u0000"+
		"\u0000\u0000]^\u0001\u0000\u0000\u0000^q\u0001\u0000\u0000\u0000_a\u0003"+
		"\u001c\r\u0000`b\u0007\u0000\u0000\u0000a`\u0001\u0000\u0000\u0000bc\u0001"+
		"\u0000\u0000\u0000ca\u0001\u0000\u0000\u0000cd\u0001\u0000\u0000\u0000"+
		"de\u0001\u0000\u0000\u0000ef\u0005:\u0000\u0000fg\u0005/\u0000\u0000g"+
		"h\u0005/\u0000\u0000hj\u0001\u0000\u0000\u0000ik\b\u0001\u0000\u0000j"+
		"i\u0001\u0000\u0000\u0000kl\u0001\u0000\u0000\u0000lj\u0001\u0000\u0000"+
		"\u0000lm\u0001\u0000\u0000\u0000mn\u0001\u0000\u0000\u0000no\u0003\u001e"+
		"\u000e\u0000oq\u0001\u0000\u0000\u0000pR\u0001\u0000\u0000\u0000p_\u0001"+
		"\u0000\u0000\u0000q\u0007\u0001\u0000\u0000\u0000rs\u0005\'\u0000\u0000"+
		"s\t\u0001\u0000\u0000\u0000tu\u0005\"\u0000\u0000u\u000b\u0001\u0000\u0000"+
		"\u0000vw\u0005(\u0000\u0000w\r\u0001\u0000\u0000\u0000xy\u0005)\u0000"+
		"\u0000y\u000f\u0001\u0000\u0000\u0000z{\u0005{\u0000\u0000{\u0011\u0001"+
		"\u0000\u0000\u0000|}\u0005}\u0000\u0000}\u0013\u0001\u0000\u0000\u0000"+
		"~\u007f\u0005[\u0000\u0000\u007f\u0015\u0001\u0000\u0000\u0000\u0080\u0081"+
		"\u0005]\u0000\u0000\u0081\u0017\u0001\u0000\u0000\u0000\u0082\u0083\u0005"+
		"`\u0000\u0000\u0083\u0019\u0001\u0000\u0000\u0000\u0084\u0085\u0005$\u0000"+
		"\u0000\u0085\u0086\u0001\u0000\u0000\u0000\u0086\u0087\u0006\f\u0000\u0000"+
		"\u0087\u001b\u0001\u0000\u0000\u0000\u0088\u0089\u0005<\u0000\u0000\u0089"+
		"\u001d\u0001\u0000\u0000\u0000\u008a\u008b\u0005>\u0000\u0000\u008b\u001f"+
		"\u0001\u0000\u0000\u0000\u008c\u008d\u0005.\u0000\u0000\u008d!\u0001\u0000"+
		"\u0000\u0000\u008e\u008f\u0005?\u0000\u0000\u008f#\u0001\u0000\u0000\u0000"+
		"\u0090\u0091\u0005!\u0000\u0000\u0091%\u0001\u0000\u0000\u0000\u0092\u0093"+
		"\u0005\u00e2\u0000\u0000\u0093\u0094\u0005\u20ac\u0000\u0000\u0094\u0095"+
		"\u0005\u00a6\u0000\u0000\u0095\'\u0001\u0000\u0000\u0000\u0096\u0097\u0005"+
		",\u0000\u0000\u0097)\u0001\u0000\u0000\u0000\u0098\u0099\u0005:\u0000"+
		"\u0000\u0099+\u0001\u0000\u0000\u0000\u009a\u009b\u0005;\u0000\u0000\u009b"+
		"-\u0001\u0000\u0000\u0000\u009c\u009f\b\u0002\u0000\u0000\u009d\u009f"+
		"\u00036\u001a\u0000\u009e\u009c\u0001\u0000\u0000\u0000\u009e\u009d\u0001"+
		"\u0000\u0000\u0000\u009f/\u0001\u0000\u0000\u0000\u00a0\u00a3\b\u0003"+
		"\u0000\u0000\u00a1\u00a3\u00036\u001a\u0000\u00a2\u00a0\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a1\u0001\u0000\u0000\u0000\u00a31\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a7\b\u0002\u0000\u0000\u00a5\u00a7\u00036\u001a\u0000\u00a6"+
		"\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a5\u0001\u0000\u0000\u0000\u00a7"+
		"3\u0001\u0000\u0000\u0000\u00a8\u00aa\u0007\u0004\u0000\u0000\u00a9\u00ab"+
		"\u0005-\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001"+
		"\u0000\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac\u00b1\u0007"+
		"\u0005\u0000\u0000\u00ad\u00ae\u00058\u0000\u0000\u00ae\u00af\u0005-\u0000"+
		"\u0000\u00af\u00b1\u0005)\u0000\u0000\u00b0\u00a8\u0001\u0000\u0000\u0000"+
		"\u00b0\u00ad\u0001\u0000\u0000\u0000\u00b15\u0001\u0000\u0000\u0000\u00b2"+
		"\u00b3\u0005\\\u0000\u0000\u00b3\u00b4\t\u0000\u0000\u0000\u00b47\u0001"+
		"\u0000\u0000\u0000\u00b5\u00b6\u0007\u0006\u0000\u0000\u00b69\u0001\u0000"+
		"\u0000\u0000\u00b7\u00b9\u00038\u001b\u0000\u00b8\u00b7\u0001\u0000\u0000"+
		"\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000"+
		"\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000"+
		"\u0000\u00bc\u00bd\u0006\u001c\u0001\u0000\u00bd;\u0001\u0000\u0000\u0000"+
		"\u00be\u00bf\u0005$\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0"+
		"\u00c1\u0006\u001d\u0002\u0000\u00c1=\u0001\u0000\u0000\u0000\u00c2\u00c5"+
		"\b\u0007\u0000\u0000\u00c3\u00c5\u00036\u001a\u0000\u00c4\u00c2\u0001"+
		"\u0000\u0000\u0000\u00c4\u00c3\u0001\u0000\u0000\u0000\u00c5?\u0001\u0000"+
		"\u0000\u0000\u00c6\u00c9\b\b\u0000\u0000\u00c7\u00c9\u00036\u001a\u0000"+
		"\u00c8\u00c6\u0001\u0000\u0000\u0000\u00c8\u00c7\u0001\u0000\u0000\u0000"+
		"\u00c9A\u0001\u0000\u0000\u0000\u0011\u0000\u0001GMT]clp\u009e\u00a2\u00a6"+
		"\u00aa\u00b0\u00ba\u00c4\u00c8\u0003\u0005\u0001\u0000\u0006\u0000\u0000"+
		"\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}